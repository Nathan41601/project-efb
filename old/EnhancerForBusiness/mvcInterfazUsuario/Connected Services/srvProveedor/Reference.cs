//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mvcInterfazUsuario.srvProveedor {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srvProveedor.IsrvProveedor")]
    public interface IsrvProveedor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/recProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/recProveedor_ENTResponse")]
        System.Collections.Generic.List<Entidades.Proveedor> recProveedor_ENT();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/recProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/recProveedor_ENTResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Entidades.Proveedor>> recProveedor_ENTAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/recProveedorXId_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/recProveedorXId_ENTResponse")]
        Entidades.Proveedor recProveedorXId_ENT(int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/recProveedorXId_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/recProveedorXId_ENTResponse")]
        System.Threading.Tasks.Task<Entidades.Proveedor> recProveedorXId_ENTAsync(int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/insProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/insProveedor_ENTResponse")]
        bool insProveedor_ENT(Entidades.Proveedor pProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/insProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/insProveedor_ENTResponse")]
        System.Threading.Tasks.Task<bool> insProveedor_ENTAsync(Entidades.Proveedor pProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/modProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/modProveedor_ENTResponse")]
        bool modProveedor_ENT(Entidades.Proveedor pProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/modProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/modProveedor_ENTResponse")]
        System.Threading.Tasks.Task<bool> modProveedor_ENTAsync(Entidades.Proveedor pProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/delProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/delProveedor_ENTResponse")]
        bool delProveedor_ENT(Entidades.Proveedor pProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsrvProveedor/delProveedor_ENT", ReplyAction="http://tempuri.org/IsrvProveedor/delProveedor_ENTResponse")]
        System.Threading.Tasks.Task<bool> delProveedor_ENTAsync(Entidades.Proveedor pProveedor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IsrvProveedorChannel : mvcInterfazUsuario.srvProveedor.IsrvProveedor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsrvProveedorClient : System.ServiceModel.ClientBase<mvcInterfazUsuario.srvProveedor.IsrvProveedor>, mvcInterfazUsuario.srvProveedor.IsrvProveedor {
        
        public IsrvProveedorClient() {
        }
        
        public IsrvProveedorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IsrvProveedorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IsrvProveedorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IsrvProveedorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Entidades.Proveedor> recProveedor_ENT() {
            return base.Channel.recProveedor_ENT();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Entidades.Proveedor>> recProveedor_ENTAsync() {
            return base.Channel.recProveedor_ENTAsync();
        }
        
        public Entidades.Proveedor recProveedorXId_ENT(int pId) {
            return base.Channel.recProveedorXId_ENT(pId);
        }
        
        public System.Threading.Tasks.Task<Entidades.Proveedor> recProveedorXId_ENTAsync(int pId) {
            return base.Channel.recProveedorXId_ENTAsync(pId);
        }
        
        public bool insProveedor_ENT(Entidades.Proveedor pProveedor) {
            return base.Channel.insProveedor_ENT(pProveedor);
        }
        
        public System.Threading.Tasks.Task<bool> insProveedor_ENTAsync(Entidades.Proveedor pProveedor) {
            return base.Channel.insProveedor_ENTAsync(pProveedor);
        }
        
        public bool modProveedor_ENT(Entidades.Proveedor pProveedor) {
            return base.Channel.modProveedor_ENT(pProveedor);
        }
        
        public System.Threading.Tasks.Task<bool> modProveedor_ENTAsync(Entidades.Proveedor pProveedor) {
            return base.Channel.modProveedor_ENTAsync(pProveedor);
        }
        
        public bool delProveedor_ENT(Entidades.Proveedor pProveedor) {
            return base.Channel.delProveedor_ENT(pProveedor);
        }
        
        public System.Threading.Tasks.Task<bool> delProveedor_ENTAsync(Entidades.Proveedor pProveedor) {
            return base.Channel.delProveedor_ENTAsync(pProveedor);
        }
    }
}
